{"env_info": "sys.platform: win32\nPython: 3.7.16 (default, Jan 17 2023, 16:06:28) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA T600 Laptop GPU\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.6\nNVCC: Cuda compilation tools, release 11.6, V11.6.124\nMSVC: \u7528\u4e8e x64 \u7684 Microsoft (R) C/C++ \u4f18\u5316\u7f16\u8bd1\u5668 19.29.30145 \u7248\nGCC: n/a\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192729112\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191125 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 2019\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.4\n  - Magma 2.5.4\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -openmp:experimental -DNDEBUG -DUSE_FBGEMM -DUSE_VULKAN_WRAPPER, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: MSVC 192930145\nMMCV CUDA Compiler: 11.6\nMMClassification: 0.25.0+5eb3dd2", "seed": 2124978870, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(type='MobileNetV2', widen_factor=1.0),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=1280,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, 5)))\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=1,\n    train=dict(\n        type='CustomDataset',\n        data_prefix='data\\flower_dataset_split\\train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=224, backend='pillow'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CustomDataset',\n        data_prefix='data\\flower_dataset_split\\val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='CustomDataset',\n        data_prefix='data\\flower_dataset_split\\val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=1, metric='accuracy')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=4e-05)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', gamma=0.98, step=1)\nrunner = dict(type='EpochBasedRunner', max_epochs=5)\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'models\\mobilenet-v2_8xb32_in1k\\mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs\\mobilenet-v2_8xb32_in1k_flower'\ngpu_ids = range(0, 1)\ndevice = 'cuda'\nseed = 2124978870\n", "CLASSES": ["daisy", "dandelion", "rose", "sunflower", "tulip"]}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.005, "memory": 447, "data_time": 0.37189, "loss": 1.53504, "time": 0.56196}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 0.83223, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 1.23673, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.005, "memory": 447, "data_time": 0.0032, "loss": 2.43788, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.005, "memory": 447, "data_time": 0.00326, "loss": 2.25704, "time": 0.06417}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.005, "memory": 447, "data_time": 0.0035, "loss": 2.72517, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 1.87491, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 80, "lr": 0.005, "memory": 447, "data_time": 0.0032, "loss": 2.03238, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 90, "lr": 0.005, "memory": 447, "data_time": 0.0031, "loss": 2.02914, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.64057, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 110, "lr": 0.005, "memory": 447, "data_time": 0.0032, "loss": 1.40701, "time": 0.06401}
{"mode": "train", "epoch": 1, "iter": 120, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 1.41064, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 130, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.33483, "time": 0.06591}
{"mode": "train", "epoch": 1, "iter": 140, "lr": 0.005, "memory": 447, "data_time": 0.0036, "loss": 1.02338, "time": 0.06702}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.005, "memory": 447, "data_time": 0.0038, "loss": 1.10532, "time": 0.06782}
{"mode": "train", "epoch": 1, "iter": 160, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.26127, "time": 0.06501}
{"mode": "train", "epoch": 1, "iter": 170, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 1.17827, "time": 0.06702}
{"mode": "train", "epoch": 1, "iter": 180, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 1.14937, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 190, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 1.16522, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.005, "memory": 447, "data_time": 0.0032, "loss": 1.10267, "time": 0.06471}
{"mode": "train", "epoch": 1, "iter": 210, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.138, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 220, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.00834, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 230, "lr": 0.005, "memory": 447, "data_time": 0.0031, "loss": 1.11296, "time": 0.06421}
{"mode": "train", "epoch": 1, "iter": 240, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.22817, "time": 0.06431}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.005, "memory": 447, "data_time": 0.0035, "loss": 1.39117, "time": 0.06451}
{"mode": "train", "epoch": 1, "iter": 260, "lr": 0.005, "memory": 447, "data_time": 0.0034, "loss": 1.24088, "time": 0.06441}
{"mode": "train", "epoch": 1, "iter": 270, "lr": 0.005, "memory": 447, "data_time": 0.0033, "loss": 0.86743, "time": 0.06411}
{"mode": "train", "epoch": 1, "iter": 280, "lr": 0.005, "memory": 447, "data_time": 0.0032, "loss": 0.91246, "time": 0.06431}
{"mode": "val", "epoch": 1, "iter": 71, "lr": 0.005, "accuracy_top-1": 83.09859, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.0049, "memory": 447, "data_time": 0.3687, "loss": 0.8931, "time": 0.46072}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.0049, "memory": 447, "data_time": 0.0033, "loss": 0.66297, "time": 0.06431}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.0049, "memory": 447, "data_time": 0.0034, "loss": 0.72773, "time": 0.06521}
{"mode": "train", "epoch": 2, "iter": 40, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 1.08725, "time": 0.06441}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.85933, "time": 0.06501}
{"mode": "train", "epoch": 2, "iter": 60, "lr": 0.0049, "memory": 447, "data_time": 0.0031, "loss": 0.84412, "time": 0.06491}
{"mode": "train", "epoch": 2, "iter": 70, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.89511, "time": 0.06451}
{"mode": "train", "epoch": 2, "iter": 80, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 1.08049, "time": 0.06421}
{"mode": "train", "epoch": 2, "iter": 90, "lr": 0.0049, "memory": 447, "data_time": 0.0035, "loss": 1.02313, "time": 0.06481}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.92368, "time": 0.06451}
{"mode": "train", "epoch": 2, "iter": 110, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.93162, "time": 0.06471}
{"mode": "train", "epoch": 2, "iter": 120, "lr": 0.0049, "memory": 447, "data_time": 0.0034, "loss": 0.8302, "time": 0.06471}
{"mode": "train", "epoch": 2, "iter": 130, "lr": 0.0049, "memory": 447, "data_time": 0.0033, "loss": 0.70733, "time": 0.06461}
{"mode": "train", "epoch": 2, "iter": 140, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.98543, "time": 0.06451}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0049, "memory": 447, "data_time": 0.0033, "loss": 0.73509, "time": 0.06461}
{"mode": "train", "epoch": 2, "iter": 160, "lr": 0.0049, "memory": 447, "data_time": 0.0034, "loss": 0.85647, "time": 0.06461}
{"mode": "train", "epoch": 2, "iter": 170, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.86409, "time": 0.06441}
{"mode": "train", "epoch": 2, "iter": 180, "lr": 0.0049, "memory": 447, "data_time": 0.0031, "loss": 0.94578, "time": 0.06501}
{"mode": "train", "epoch": 2, "iter": 190, "lr": 0.0049, "memory": 447, "data_time": 0.0033, "loss": 0.72731, "time": 0.06481}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.79016, "time": 0.06491}
{"mode": "train", "epoch": 2, "iter": 210, "lr": 0.0049, "memory": 447, "data_time": 0.0036, "loss": 1.00219, "time": 0.06732}
{"mode": "train", "epoch": 2, "iter": 220, "lr": 0.0049, "memory": 447, "data_time": 0.0034, "loss": 0.86978, "time": 0.06611}
{"mode": "train", "epoch": 2, "iter": 230, "lr": 0.0049, "memory": 447, "data_time": 0.0033, "loss": 0.81604, "time": 0.06672}
{"mode": "train", "epoch": 2, "iter": 240, "lr": 0.0049, "memory": 447, "data_time": 0.0034, "loss": 0.85052, "time": 0.06501}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.68071, "time": 0.06441}
{"mode": "train", "epoch": 2, "iter": 260, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.73359, "time": 0.06451}
{"mode": "train", "epoch": 2, "iter": 270, "lr": 0.0049, "memory": 447, "data_time": 0.0032, "loss": 0.58327, "time": 0.06461}
{"mode": "train", "epoch": 2, "iter": 280, "lr": 0.0049, "memory": 447, "data_time": 0.0034, "loss": 0.86255, "time": 0.06461}
{"mode": "val", "epoch": 2, "iter": 71, "lr": 0.0049, "accuracy_top-1": 72.88732, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.0048, "memory": 447, "data_time": 0.36759, "loss": 0.87996, "time": 0.45011}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.80071, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.0048, "memory": 447, "data_time": 0.0035, "loss": 0.76144, "time": 0.06521}
{"mode": "train", "epoch": 3, "iter": 40, "lr": 0.0048, "memory": 447, "data_time": 0.0032, "loss": 0.68556, "time": 0.06712}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0048, "memory": 447, "data_time": 0.0039, "loss": 0.84956, "time": 0.06892}
{"mode": "train", "epoch": 3, "iter": 60, "lr": 0.0048, "memory": 447, "data_time": 0.0035, "loss": 0.77974, "time": 0.06521}
{"mode": "train", "epoch": 3, "iter": 70, "lr": 0.0048, "memory": 447, "data_time": 0.0034, "loss": 0.71366, "time": 0.06471}
{"mode": "train", "epoch": 3, "iter": 80, "lr": 0.0048, "memory": 447, "data_time": 0.00328, "loss": 0.70788, "time": 0.06449}
{"mode": "train", "epoch": 3, "iter": 90, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.67129, "time": 0.06421}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.575, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 110, "lr": 0.0048, "memory": 447, "data_time": 0.0032, "loss": 0.73673, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 120, "lr": 0.0048, "memory": 447, "data_time": 0.0032, "loss": 0.75285, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 130, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.72462, "time": 0.06421}
{"mode": "train", "epoch": 3, "iter": 140, "lr": 0.0048, "memory": 447, "data_time": 0.0035, "loss": 0.88343, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.69641, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 160, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.84066, "time": 0.06451}
{"mode": "train", "epoch": 3, "iter": 170, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.66835, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 180, "lr": 0.0048, "memory": 447, "data_time": 0.0034, "loss": 0.55603, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 190, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.56712, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0048, "memory": 447, "data_time": 0.0034, "loss": 0.67162, "time": 0.06451}
{"mode": "train", "epoch": 3, "iter": 210, "lr": 0.0048, "memory": 447, "data_time": 0.0031, "loss": 0.53623, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 220, "lr": 0.0048, "memory": 447, "data_time": 0.0032, "loss": 0.76383, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 230, "lr": 0.0048, "memory": 447, "data_time": 0.0031, "loss": 0.67207, "time": 0.06441}
{"mode": "train", "epoch": 3, "iter": 240, "lr": 0.0048, "memory": 447, "data_time": 0.0032, "loss": 0.63897, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.91291, "time": 0.06431}
{"mode": "train", "epoch": 3, "iter": 260, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.58574, "time": 0.06451}
{"mode": "train", "epoch": 3, "iter": 270, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.7578, "time": 0.06451}
{"mode": "train", "epoch": 3, "iter": 280, "lr": 0.0048, "memory": 447, "data_time": 0.0033, "loss": 0.56925, "time": 0.06431}
{"mode": "val", "epoch": 3, "iter": 71, "lr": 0.0048, "accuracy_top-1": 89.08451, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.00471, "memory": 447, "data_time": 0.36833, "loss": 0.71458, "time": 0.45085}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.00471, "memory": 447, "data_time": 0.0032, "loss": 0.84053, "time": 0.06411}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.00471, "memory": 447, "data_time": 0.0031, "loss": 0.78174, "time": 0.06421}
{"mode": "train", "epoch": 4, "iter": 40, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.50646, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.79514, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 60, "lr": 0.00471, "memory": 447, "data_time": 0.0032, "loss": 0.67639, "time": 0.06401}
{"mode": "train", "epoch": 4, "iter": 70, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.75467, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 80, "lr": 0.00471, "memory": 447, "data_time": 0.0031, "loss": 0.61541, "time": 0.06401}
{"mode": "train", "epoch": 4, "iter": 90, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.4939, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.50492, "time": 0.06441}
{"mode": "train", "epoch": 4, "iter": 110, "lr": 0.00471, "memory": 447, "data_time": 0.0031, "loss": 0.67661, "time": 0.06421}
{"mode": "train", "epoch": 4, "iter": 120, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.70056, "time": 0.06451}
{"mode": "train", "epoch": 4, "iter": 130, "lr": 0.00471, "memory": 447, "data_time": 0.0031, "loss": 0.88696, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 140, "lr": 0.00471, "memory": 447, "data_time": 0.0031, "loss": 0.80213, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.00471, "memory": 447, "data_time": 0.0035, "loss": 0.77906, "time": 0.06421}
{"mode": "train", "epoch": 4, "iter": 160, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.6917, "time": 0.06441}
{"mode": "train", "epoch": 4, "iter": 170, "lr": 0.00471, "memory": 447, "data_time": 0.0032, "loss": 0.63158, "time": 0.06451}
{"mode": "train", "epoch": 4, "iter": 180, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.63649, "time": 0.06471}
{"mode": "train", "epoch": 4, "iter": 190, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.48669, "time": 0.06471}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.41004, "time": 0.06471}
{"mode": "train", "epoch": 4, "iter": 210, "lr": 0.00471, "memory": 447, "data_time": 0.0031, "loss": 0.54695, "time": 0.06481}
{"mode": "train", "epoch": 4, "iter": 220, "lr": 0.00471, "memory": 447, "data_time": 0.0035, "loss": 0.63622, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 230, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.59594, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 240, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.48722, "time": 0.06411}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.00471, "memory": 447, "data_time": 0.0032, "loss": 0.46246, "time": 0.06411}
{"mode": "train", "epoch": 4, "iter": 260, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.72489, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 270, "lr": 0.00471, "memory": 447, "data_time": 0.0033, "loss": 0.53278, "time": 0.06431}
{"mode": "train", "epoch": 4, "iter": 280, "lr": 0.00471, "memory": 447, "data_time": 0.0034, "loss": 0.56237, "time": 0.06431}
{"mode": "val", "epoch": 4, "iter": 71, "lr": 0.00471, "accuracy_top-1": 90.49296, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.00461, "memory": 447, "data_time": 0.36727, "loss": 0.39266, "time": 0.45589}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.00461, "memory": 447, "data_time": 0.00337, "loss": 0.59133, "time": 0.06448}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.57832, "time": 0.06451}
{"mode": "train", "epoch": 5, "iter": 40, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.35781, "time": 0.06421}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.54619, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 60, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.50684, "time": 0.06441}
{"mode": "train", "epoch": 5, "iter": 70, "lr": 0.00461, "memory": 447, "data_time": 0.0031, "loss": 0.5081, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 80, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.5602, "time": 0.06451}
{"mode": "train", "epoch": 5, "iter": 90, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.60415, "time": 0.06451}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00461, "memory": 447, "data_time": 0.0035, "loss": 0.67901, "time": 0.06421}
{"mode": "train", "epoch": 5, "iter": 110, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.74791, "time": 0.06441}
{"mode": "train", "epoch": 5, "iter": 120, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.61415, "time": 0.06451}
{"mode": "train", "epoch": 5, "iter": 130, "lr": 0.00461, "memory": 447, "data_time": 0.0034, "loss": 0.44089, "time": 0.06461}
{"mode": "train", "epoch": 5, "iter": 140, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.45047, "time": 0.06481}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.50997, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 160, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.66381, "time": 0.06461}
{"mode": "train", "epoch": 5, "iter": 170, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.70093, "time": 0.06441}
{"mode": "train", "epoch": 5, "iter": 180, "lr": 0.00461, "memory": 447, "data_time": 0.0034, "loss": 0.44452, "time": 0.06461}
{"mode": "train", "epoch": 5, "iter": 190, "lr": 0.00461, "memory": 447, "data_time": 0.0035, "loss": 0.56934, "time": 0.06461}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.00461, "memory": 447, "data_time": 0.0034, "loss": 0.63585, "time": 0.06471}
{"mode": "train", "epoch": 5, "iter": 210, "lr": 0.00461, "memory": 447, "data_time": 0.0034, "loss": 0.60712, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 220, "lr": 0.00461, "memory": 447, "data_time": 0.0035, "loss": 0.53148, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 230, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.52986, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 240, "lr": 0.00461, "memory": 447, "data_time": 0.0033, "loss": 0.49143, "time": 0.06451}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.78197, "time": 0.06431}
{"mode": "train", "epoch": 5, "iter": 260, "lr": 0.00461, "memory": 447, "data_time": 0.0032, "loss": 0.60175, "time": 0.06421}
{"mode": "train", "epoch": 5, "iter": 270, "lr": 0.00461, "memory": 447, "data_time": 0.0035, "loss": 0.61638, "time": 0.06421}
{"mode": "train", "epoch": 5, "iter": 280, "lr": 0.00461, "memory": 447, "data_time": 0.0035, "loss": 0.70051, "time": 0.06511}
{"mode": "val", "epoch": 5, "iter": 71, "lr": 0.00461, "accuracy_top-1": 89.96479, "accuracy_top-5": 100.0}
